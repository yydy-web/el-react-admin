/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as PageRouteImport } from './routes/$page'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthPage2RouteImport } from './routes/_auth/page2'
import { Route as AuthPageRouteImport } from './routes/_auth/page'
import { Route as AuthIconRouteImport } from './routes/_auth/icon'
import { Route as AuthNestingRouteImport } from './routes/_auth/_nesting'
import { Route as AuthJotaiIndexRouteImport } from './routes/_auth/jotai/index'
import { Route as AuthAboutIndexRouteImport } from './routes/_auth/about/index'
import { Route as AuthAboutIdRouteImport } from './routes/_auth/about/$id'
import { Route as AuthNestingLayoutTestRouteImport } from './routes/_auth/_nesting/layout-test'
import { Route as AuthNestingLayoutRouteImport } from './routes/_auth/_nesting/_layout'
import { Route as AuthgroupGroup3RouteImport } from './routes/_auth/(group)/group3'
import { Route as AuthgroupGroup2RouteImport } from './routes/_auth/(group)/group2'
import { Route as AuthAboutNameIndexRouteImport } from './routes/_auth/about/name/index'
import { Route as AuthAboutValueIndexRouteImport } from './routes/_auth/about/$value/index'
import { Route as AuthNestingNestingIndexRouteImport } from './routes/_auth/_nesting/nesting/index'
import { Route as AuthAboutNameNameRouteImport } from './routes/_auth/about/name/$name'
import { Route as AuthAboutValueCreateRouteImport } from './routes/_auth/about/$value/create'
import { Route as AuthNestingNestingLayout2RouteImport } from './routes/_auth/_nesting/nesting/layout2'
import { Route as AuthNestingNestingLayoutRouteImport } from './routes/_auth/_nesting/nesting/layout'
import { Route as AuthNestingLayoutTest2RouteImport } from './routes/_auth/_nesting/_layout/test2'
import { Route as AuthNestingNestingLayout2LayoutRouteImport } from './routes/_auth/_nesting/nesting/layout2/layout'
import { Route as AuthNestingLayoutTest3IdRouteImport } from './routes/_auth/_nesting/_layout/test3.$id'

const AuthStoreLazyRouteImport = createFileRoute('/_auth/store')()

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const PageRoute = PageRouteImport.update({
  id: '/$page',
  path: '/$page',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthStoreLazyRoute = AuthStoreLazyRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/store.lazy').then((d) => d.Route))
const AuthPage2Route = AuthPage2RouteImport.update({
  id: '/page2',
  path: '/page2',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPageRoute = AuthPageRouteImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => AuthRoute,
} as any)
const AuthIconRoute = AuthIconRouteImport.update({
  id: '/icon',
  path: '/icon',
  getParentRoute: () => AuthRoute,
} as any)
const AuthNestingRoute = AuthNestingRouteImport.update({
  id: '/_nesting',
  getParentRoute: () => AuthRoute,
} as any)
const AuthJotaiIndexRoute = AuthJotaiIndexRouteImport.update({
  id: '/jotai/',
  path: '/jotai/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutIndexRoute = AuthAboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutIdRoute = AuthAboutIdRouteImport.update({
  id: '/about/$id',
  path: '/about/$id',
  getParentRoute: () => AuthRoute,
} as any)
const AuthNestingLayoutTestRoute = AuthNestingLayoutTestRouteImport.update({
  id: '/layout-test',
  path: '/layout-test',
  getParentRoute: () => AuthNestingRoute,
} as any)
const AuthNestingLayoutRoute = AuthNestingLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AuthNestingRoute,
} as any)
const AuthgroupGroup3Route = AuthgroupGroup3RouteImport.update({
  id: '/(group)/group3',
  path: '/group3',
  getParentRoute: () => AuthRoute,
} as any)
const AuthgroupGroup2Route = AuthgroupGroup2RouteImport.update({
  id: '/(group)/group2',
  path: '/group2',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutNameIndexRoute = AuthAboutNameIndexRouteImport.update({
  id: '/about/name/',
  path: '/about/name/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutValueIndexRoute = AuthAboutValueIndexRouteImport.update({
  id: '/about/$value/',
  path: '/about/$value/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthNestingNestingIndexRoute = AuthNestingNestingIndexRouteImport.update({
  id: '/nesting/',
  path: '/nesting/',
  getParentRoute: () => AuthNestingRoute,
} as any)
const AuthAboutNameNameRoute = AuthAboutNameNameRouteImport.update({
  id: '/about/name/$name',
  path: '/about/name/$name',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAboutValueCreateRoute = AuthAboutValueCreateRouteImport.update({
  id: '/about/$value/create',
  path: '/about/$value/create',
  getParentRoute: () => AuthRoute,
} as any)
const AuthNestingNestingLayout2Route =
  AuthNestingNestingLayout2RouteImport.update({
    id: '/nesting/layout2',
    path: '/nesting/layout2',
    getParentRoute: () => AuthNestingRoute,
  } as any)
const AuthNestingNestingLayoutRoute =
  AuthNestingNestingLayoutRouteImport.update({
    id: '/nesting/layout',
    path: '/nesting/layout',
    getParentRoute: () => AuthNestingRoute,
  } as any)
const AuthNestingLayoutTest2Route = AuthNestingLayoutTest2RouteImport.update({
  id: '/test2',
  path: '/test2',
  getParentRoute: () => AuthNestingLayoutRoute,
} as any)
const AuthNestingNestingLayout2LayoutRoute =
  AuthNestingNestingLayout2LayoutRouteImport.update({
    id: '/layout',
    path: '/layout',
    getParentRoute: () => AuthNestingNestingLayout2Route,
  } as any)
const AuthNestingLayoutTest3IdRoute =
  AuthNestingLayoutTest3IdRouteImport.update({
    id: '/test3/$id',
    path: '/test3/$id',
    getParentRoute: () => AuthNestingLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$page': typeof PageRoute
  '/login': typeof LoginRoute
  '/icon': typeof AuthIconRoute
  '/page': typeof AuthPageRoute
  '/page2': typeof AuthPage2Route
  '/store': typeof AuthStoreLazyRoute
  '/': typeof AuthIndexRoute
  '/group2': typeof AuthgroupGroup2Route
  '/group3': typeof AuthgroupGroup3Route
  '/layout-test': typeof AuthNestingLayoutTestRoute
  '/about/$id': typeof AuthAboutIdRoute
  '/about': typeof AuthAboutIndexRoute
  '/jotai': typeof AuthJotaiIndexRoute
  '/test2': typeof AuthNestingLayoutTest2Route
  '/nesting/layout': typeof AuthNestingNestingLayoutRoute
  '/nesting/layout2': typeof AuthNestingNestingLayout2RouteWithChildren
  '/about/$value/create': typeof AuthAboutValueCreateRoute
  '/about/name/$name': typeof AuthAboutNameNameRoute
  '/nesting': typeof AuthNestingNestingIndexRoute
  '/about/$value': typeof AuthAboutValueIndexRoute
  '/about/name': typeof AuthAboutNameIndexRoute
  '/test3/$id': typeof AuthNestingLayoutTest3IdRoute
  '/nesting/layout2/layout': typeof AuthNestingNestingLayout2LayoutRoute
}
export interface FileRoutesByTo {
  '/$page': typeof PageRoute
  '/login': typeof LoginRoute
  '/icon': typeof AuthIconRoute
  '/page': typeof AuthPageRoute
  '/page2': typeof AuthPage2Route
  '/store': typeof AuthStoreLazyRoute
  '/': typeof AuthIndexRoute
  '/group2': typeof AuthgroupGroup2Route
  '/group3': typeof AuthgroupGroup3Route
  '/layout-test': typeof AuthNestingLayoutTestRoute
  '/about/$id': typeof AuthAboutIdRoute
  '/about': typeof AuthAboutIndexRoute
  '/jotai': typeof AuthJotaiIndexRoute
  '/test2': typeof AuthNestingLayoutTest2Route
  '/nesting/layout': typeof AuthNestingNestingLayoutRoute
  '/nesting/layout2': typeof AuthNestingNestingLayout2RouteWithChildren
  '/about/$value/create': typeof AuthAboutValueCreateRoute
  '/about/name/$name': typeof AuthAboutNameNameRoute
  '/nesting': typeof AuthNestingNestingIndexRoute
  '/about/$value': typeof AuthAboutValueIndexRoute
  '/about/name': typeof AuthAboutNameIndexRoute
  '/test3/$id': typeof AuthNestingLayoutTest3IdRoute
  '/nesting/layout2/layout': typeof AuthNestingNestingLayout2LayoutRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$page': typeof PageRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/_nesting': typeof AuthNestingRouteWithChildren
  '/_auth/icon': typeof AuthIconRoute
  '/_auth/page': typeof AuthPageRoute
  '/_auth/page2': typeof AuthPage2Route
  '/_auth/store': typeof AuthStoreLazyRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/(group)/group2': typeof AuthgroupGroup2Route
  '/_auth/(group)/group3': typeof AuthgroupGroup3Route
  '/_auth/_nesting/_layout': typeof AuthNestingLayoutRouteWithChildren
  '/_auth/_nesting/layout-test': typeof AuthNestingLayoutTestRoute
  '/_auth/about/$id': typeof AuthAboutIdRoute
  '/_auth/about/': typeof AuthAboutIndexRoute
  '/_auth/jotai/': typeof AuthJotaiIndexRoute
  '/_auth/_nesting/_layout/test2': typeof AuthNestingLayoutTest2Route
  '/_auth/_nesting/nesting/layout': typeof AuthNestingNestingLayoutRoute
  '/_auth/_nesting/nesting/layout2': typeof AuthNestingNestingLayout2RouteWithChildren
  '/_auth/about/$value/create': typeof AuthAboutValueCreateRoute
  '/_auth/about/name/$name': typeof AuthAboutNameNameRoute
  '/_auth/_nesting/nesting/': typeof AuthNestingNestingIndexRoute
  '/_auth/about/$value/': typeof AuthAboutValueIndexRoute
  '/_auth/about/name/': typeof AuthAboutNameIndexRoute
  '/_auth/_nesting/_layout/test3/$id': typeof AuthNestingLayoutTest3IdRoute
  '/_auth/_nesting/nesting/layout2/layout': typeof AuthNestingNestingLayout2LayoutRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$page'
    | '/login'
    | '/icon'
    | '/page'
    | '/page2'
    | '/store'
    | '/'
    | '/group2'
    | '/group3'
    | '/layout-test'
    | '/about/$id'
    | '/about'
    | '/jotai'
    | '/test2'
    | '/nesting/layout'
    | '/nesting/layout2'
    | '/about/$value/create'
    | '/about/name/$name'
    | '/nesting'
    | '/about/$value'
    | '/about/name'
    | '/test3/$id'
    | '/nesting/layout2/layout'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$page'
    | '/login'
    | '/icon'
    | '/page'
    | '/page2'
    | '/store'
    | '/'
    | '/group2'
    | '/group3'
    | '/layout-test'
    | '/about/$id'
    | '/about'
    | '/jotai'
    | '/test2'
    | '/nesting/layout'
    | '/nesting/layout2'
    | '/about/$value/create'
    | '/about/name/$name'
    | '/nesting'
    | '/about/$value'
    | '/about/name'
    | '/test3/$id'
    | '/nesting/layout2/layout'
  id:
    | '__root__'
    | '/$page'
    | '/_auth'
    | '/login'
    | '/_auth/_nesting'
    | '/_auth/icon'
    | '/_auth/page'
    | '/_auth/page2'
    | '/_auth/store'
    | '/_auth/'
    | '/_auth/(group)/group2'
    | '/_auth/(group)/group3'
    | '/_auth/_nesting/_layout'
    | '/_auth/_nesting/layout-test'
    | '/_auth/about/$id'
    | '/_auth/about/'
    | '/_auth/jotai/'
    | '/_auth/_nesting/_layout/test2'
    | '/_auth/_nesting/nesting/layout'
    | '/_auth/_nesting/nesting/layout2'
    | '/_auth/about/$value/create'
    | '/_auth/about/name/$name'
    | '/_auth/_nesting/nesting/'
    | '/_auth/about/$value/'
    | '/_auth/about/name/'
    | '/_auth/_nesting/_layout/test3/$id'
    | '/_auth/_nesting/nesting/layout2/layout'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$page': {
      id: '/$page'
      path: '/$page'
      fullPath: '/$page'
      preLoaderRoute: typeof PageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/store': {
      id: '/_auth/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof AuthStoreLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/page2': {
      id: '/_auth/page2'
      path: '/page2'
      fullPath: '/page2'
      preLoaderRoute: typeof AuthPage2RouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/page': {
      id: '/_auth/page'
      path: '/page'
      fullPath: '/page'
      preLoaderRoute: typeof AuthPageRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/icon': {
      id: '/_auth/icon'
      path: '/icon'
      fullPath: '/icon'
      preLoaderRoute: typeof AuthIconRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_nesting': {
      id: '/_auth/_nesting'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthNestingRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/jotai/': {
      id: '/_auth/jotai/'
      path: '/jotai'
      fullPath: '/jotai'
      preLoaderRoute: typeof AuthJotaiIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about/': {
      id: '/_auth/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about/$id': {
      id: '/_auth/about/$id'
      path: '/about/$id'
      fullPath: '/about/$id'
      preLoaderRoute: typeof AuthAboutIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_nesting/layout-test': {
      id: '/_auth/_nesting/layout-test'
      path: '/layout-test'
      fullPath: '/layout-test'
      preLoaderRoute: typeof AuthNestingLayoutTestRouteImport
      parentRoute: typeof AuthNestingRoute
    }
    '/_auth/_nesting/_layout': {
      id: '/_auth/_nesting/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthNestingLayoutRouteImport
      parentRoute: typeof AuthNestingRoute
    }
    '/_auth/(group)/group3': {
      id: '/_auth/(group)/group3'
      path: '/group3'
      fullPath: '/group3'
      preLoaderRoute: typeof AuthgroupGroup3RouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/(group)/group2': {
      id: '/_auth/(group)/group2'
      path: '/group2'
      fullPath: '/group2'
      preLoaderRoute: typeof AuthgroupGroup2RouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about/name/': {
      id: '/_auth/about/name/'
      path: '/about/name'
      fullPath: '/about/name'
      preLoaderRoute: typeof AuthAboutNameIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about/$value/': {
      id: '/_auth/about/$value/'
      path: '/about/$value'
      fullPath: '/about/$value'
      preLoaderRoute: typeof AuthAboutValueIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_nesting/nesting/': {
      id: '/_auth/_nesting/nesting/'
      path: '/nesting'
      fullPath: '/nesting'
      preLoaderRoute: typeof AuthNestingNestingIndexRouteImport
      parentRoute: typeof AuthNestingRoute
    }
    '/_auth/about/name/$name': {
      id: '/_auth/about/name/$name'
      path: '/about/name/$name'
      fullPath: '/about/name/$name'
      preLoaderRoute: typeof AuthAboutNameNameRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/about/$value/create': {
      id: '/_auth/about/$value/create'
      path: '/about/$value/create'
      fullPath: '/about/$value/create'
      preLoaderRoute: typeof AuthAboutValueCreateRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_nesting/nesting/layout2': {
      id: '/_auth/_nesting/nesting/layout2'
      path: '/nesting/layout2'
      fullPath: '/nesting/layout2'
      preLoaderRoute: typeof AuthNestingNestingLayout2RouteImport
      parentRoute: typeof AuthNestingRoute
    }
    '/_auth/_nesting/nesting/layout': {
      id: '/_auth/_nesting/nesting/layout'
      path: '/nesting/layout'
      fullPath: '/nesting/layout'
      preLoaderRoute: typeof AuthNestingNestingLayoutRouteImport
      parentRoute: typeof AuthNestingRoute
    }
    '/_auth/_nesting/_layout/test2': {
      id: '/_auth/_nesting/_layout/test2'
      path: '/test2'
      fullPath: '/test2'
      preLoaderRoute: typeof AuthNestingLayoutTest2RouteImport
      parentRoute: typeof AuthNestingLayoutRoute
    }
    '/_auth/_nesting/nesting/layout2/layout': {
      id: '/_auth/_nesting/nesting/layout2/layout'
      path: '/layout'
      fullPath: '/nesting/layout2/layout'
      preLoaderRoute: typeof AuthNestingNestingLayout2LayoutRouteImport
      parentRoute: typeof AuthNestingNestingLayout2Route
    }
    '/_auth/_nesting/_layout/test3/$id': {
      id: '/_auth/_nesting/_layout/test3/$id'
      path: '/test3/$id'
      fullPath: '/test3/$id'
      preLoaderRoute: typeof AuthNestingLayoutTest3IdRouteImport
      parentRoute: typeof AuthNestingLayoutRoute
    }
  }
}

interface AuthNestingLayoutRouteChildren {
  AuthNestingLayoutTest2Route: typeof AuthNestingLayoutTest2Route
  AuthNestingLayoutTest3IdRoute: typeof AuthNestingLayoutTest3IdRoute
}

const AuthNestingLayoutRouteChildren: AuthNestingLayoutRouteChildren = {
  AuthNestingLayoutTest2Route: AuthNestingLayoutTest2Route,
  AuthNestingLayoutTest3IdRoute: AuthNestingLayoutTest3IdRoute,
}

const AuthNestingLayoutRouteWithChildren =
  AuthNestingLayoutRoute._addFileChildren(AuthNestingLayoutRouteChildren)

interface AuthNestingNestingLayout2RouteChildren {
  AuthNestingNestingLayout2LayoutRoute: typeof AuthNestingNestingLayout2LayoutRoute
}

const AuthNestingNestingLayout2RouteChildren: AuthNestingNestingLayout2RouteChildren =
  {
    AuthNestingNestingLayout2LayoutRoute: AuthNestingNestingLayout2LayoutRoute,
  }

const AuthNestingNestingLayout2RouteWithChildren =
  AuthNestingNestingLayout2Route._addFileChildren(
    AuthNestingNestingLayout2RouteChildren,
  )

interface AuthNestingRouteChildren {
  AuthNestingLayoutRoute: typeof AuthNestingLayoutRouteWithChildren
  AuthNestingLayoutTestRoute: typeof AuthNestingLayoutTestRoute
  AuthNestingNestingLayoutRoute: typeof AuthNestingNestingLayoutRoute
  AuthNestingNestingLayout2Route: typeof AuthNestingNestingLayout2RouteWithChildren
  AuthNestingNestingIndexRoute: typeof AuthNestingNestingIndexRoute
}

const AuthNestingRouteChildren: AuthNestingRouteChildren = {
  AuthNestingLayoutRoute: AuthNestingLayoutRouteWithChildren,
  AuthNestingLayoutTestRoute: AuthNestingLayoutTestRoute,
  AuthNestingNestingLayoutRoute: AuthNestingNestingLayoutRoute,
  AuthNestingNestingLayout2Route: AuthNestingNestingLayout2RouteWithChildren,
  AuthNestingNestingIndexRoute: AuthNestingNestingIndexRoute,
}

const AuthNestingRouteWithChildren = AuthNestingRoute._addFileChildren(
  AuthNestingRouteChildren,
)

interface AuthRouteChildren {
  AuthNestingRoute: typeof AuthNestingRouteWithChildren
  AuthIconRoute: typeof AuthIconRoute
  AuthPageRoute: typeof AuthPageRoute
  AuthPage2Route: typeof AuthPage2Route
  AuthStoreLazyRoute: typeof AuthStoreLazyRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthgroupGroup2Route: typeof AuthgroupGroup2Route
  AuthgroupGroup3Route: typeof AuthgroupGroup3Route
  AuthAboutIdRoute: typeof AuthAboutIdRoute
  AuthAboutIndexRoute: typeof AuthAboutIndexRoute
  AuthJotaiIndexRoute: typeof AuthJotaiIndexRoute
  AuthAboutValueCreateRoute: typeof AuthAboutValueCreateRoute
  AuthAboutNameNameRoute: typeof AuthAboutNameNameRoute
  AuthAboutValueIndexRoute: typeof AuthAboutValueIndexRoute
  AuthAboutNameIndexRoute: typeof AuthAboutNameIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthNestingRoute: AuthNestingRouteWithChildren,
  AuthIconRoute: AuthIconRoute,
  AuthPageRoute: AuthPageRoute,
  AuthPage2Route: AuthPage2Route,
  AuthStoreLazyRoute: AuthStoreLazyRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthgroupGroup2Route: AuthgroupGroup2Route,
  AuthgroupGroup3Route: AuthgroupGroup3Route,
  AuthAboutIdRoute: AuthAboutIdRoute,
  AuthAboutIndexRoute: AuthAboutIndexRoute,
  AuthJotaiIndexRoute: AuthJotaiIndexRoute,
  AuthAboutValueCreateRoute: AuthAboutValueCreateRoute,
  AuthAboutNameNameRoute: AuthAboutNameNameRoute,
  AuthAboutValueIndexRoute: AuthAboutValueIndexRoute,
  AuthAboutNameIndexRoute: AuthAboutNameIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
